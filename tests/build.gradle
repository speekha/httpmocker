/*
 * Copyright 2019-2021 David Blanc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'kotlin'
    id 'kotlinx-serialization'
}

test {
    options {
        useJUnitPlatform()
    }
//    def processors = Runtime.getRuntime().availableProcessors()
//    if (processors > 1) {
//        maxParallelForks = processors - 1
//    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    // Logs
    implementation "org.slf4j:slf4j-simple:$slf4j_version"

    // Local projects
    implementation project(':mocker-okhttp')
    implementation project(':mocker-ktor')
    implementation project(':jackson-adapter')
    implementation project(':gson-adapter')
    implementation project(':moshi-adapter')
    implementation project(':kotlinx-adapter')
    implementation project(':custom-adapter')
    implementation project(':sax-adapter')

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    // Ktor
    implementation "io.ktor:ktor-client-cio:$ktor_version"
//    testImplementation "io.ktor:ktor-client-android:$ktor_version"
//    testImplementation "io.ktor:ktor-client-core:$ktor_version"
    testImplementation "io.ktor:ktor-client-json:$ktor_version"
    testImplementation "io.ktor:ktor-client-serialization:$ktor_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinx_serialization_version"

    // Jackson
    testImplementation "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    testImplementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    testImplementation "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
    testImplementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"

    // Junit
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"

    // Mocks for Kotlin tests
    testImplementation "io.mockk:mockk:1.10.2"

    // Mock web server
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
}

apply from: '../gradle/coverage.gradle'