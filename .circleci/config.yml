version: 2.1
commands:
  build-module:
    description: "Builds a specific module"
    parameters:
      module:
        type: string
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}-
            - source-
      - checkout
      - restore_cache:
          keys:
            - jars-{{ checksum "build.gradle" }}-{{ checksum  "demo/build.gradle" }}-{{ checksum  "mocker/build.gradle" }}-{{ checksum  "jackson-adapter/build.gradle" }}-{{ checksum  "gson-adapter/build.gradle" }}-{{ checksum  "moshi-adapter/build.gradle" }}-{{ checksum  "custom-adapter/build.gradle" }}
            - gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          keys:
            - build-mocker-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Build
          command: ./gradlew << parameters.module >>:clean << parameters.module >>:assemble << parameters.module >>:sourcesJar << parameters.module >>:dokkaJar --stacktrace
      - save_cache:
          key: build-<< parameters.module >>-{{ .Branch }}-{{ .Revision }}
          paths:
            - << parameters.module >>/build

jobs:
  prepare_dependencies:
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
      #TERM: dumb

    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}-
            - source-
      - checkout
      - restore_cache:
          keys:
            - jars-{{ checksum "build.gradle" }}-{{ checksum  "demo/build.gradle" }}-{{ checksum  "mocker/build.gradle" }}-{{ checksum  "jackson-adapter/build.gradle" }}-{{ checksum  "gson-adapter/build.gradle" }}-{{ checksum  "moshi-adapter/build.gradle" }}-{{ checksum  "custom-adapter/build.gradle" }}
            - gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies --stacktrace
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "demo/build.gradle" }}-{{ checksum  "mocker/build.gradle" }}-{{ checksum  "jackson-adapter/build.gradle" }}-{{ checksum  "gson-adapter/build.gradle" }}-{{ checksum  "moshi-adapter/build.gradle" }}-{{ checksum  "custom-adapter/build.gradle" }}
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run:
          name: Clean git
          command: git gc
      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - "."
  build_core:
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - build-module:
          module: "mocker"
  build_jackson:
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - build-module:
          module: "jackson-adapter"
  build_gson:
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - build-module:
          module: "gson-adapter"
  build_moshi:
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - build-module:
          module: "moshi-adapter"
  build_custom:
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - build-module:
          module: "custom-adapter"
  build_kotlinx:
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - build-module:
          module: "kotlinx-adapter"
  build_demo:
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}-
            - source-
      - checkout
      - restore_cache:
          keys:
            - jars-{{ checksum "build.gradle" }}-{{ checksum  "demo/build.gradle" }}-{{ checksum  "mocker/build.gradle" }}-{{ checksum  "jackson-adapter/build.gradle" }}-{{ checksum  "gson-adapter/build.gradle" }}-{{ checksum  "moshi-adapter/build.gradle" }}-{{ checksum  "custom-adapter/build.gradle" }}
            - gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          keys:
            - build-mocker-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          keys:
            - build-jackson-adapter-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Build
          command: ./gradlew demo:clean demo:assemble demo:testDebugUnitTest --stacktrace
      - store_test_results:
          path: demo/build/test-results
      - store_artifacts:
          path: demo/build/outputs/apk/
          destination: apks
  store_artifacts:
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}-
            - source-
      - restore_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - checkout
      - restore_cache:
          keys:
            - build-mocker-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          keys:
            - build-jackson-adapter-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          keys:
            - build-gson-adapter-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          keys:
            - build-moshi-adapter-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          keys:
            - build-custom-adapter-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          keys:
            - build-kotlinx-adapter-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Gather libs
          command: ./prepareArtifacts.sh
      - store_artifacts:
          path: build/libs
          destination: libs
  test:
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}-
            - source-
      - restore_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - checkout
      - restore_cache:
          keys:
            - build-mocker-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          keys:
            - build-jackson-adapter-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          keys:
            - build-gson-adapter-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          keys:
            - build-moshi-adapter-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          keys:
            - build-custom-adapter-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          keys:
            - build-kotlinx-adapter-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Tests
          command: ./gradlew tests:test --stacktrace
      - store_artifacts:
          path: tests/build/reports
          destination: reports
      - store_test_results:
          path: tests/build/test-results
      - save_cache:
          key: build-{{ .Branch }}-{{ .Revision }}
          paths:
            - "."
  publish_snapshot:
    docker:
      - image: circleci/android:api-29
    steps:
      - restore_cache:
          key: build-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run:
          name: Publish
          command: ./publishSnapshot.sh ${BINTRAY_USER} ${BINTRAY_APIKEY}
  publish_release:
    docker:
      - image: circleci/android:api-29
    steps:
      - restore_cache:
          key: build-{{ .Branch }}-{{ .Revision }}
      - restore_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run:
          name: Publish
          command: ./publish.sh ${BINTRAY_USER} ${BINTRAY_APIKEY}

workflows:
  version: 2
  build_and_publish:
    jobs:
      - prepare_dependencies
      - build_core:
          requires:
            - prepare_dependencies
      - build_jackson:
          requires:
            - build_core
      - build_gson:
          requires:
            - build_core
      - build_moshi:
          requires:
            - build_core
      - build_custom:
          requires:
            - build_core
      - build_kotlinx:
          requires:
            - build_core
      - build_demo:
          requires:
            - build_jackson
      - store_artifacts:
          requires:
            - build_jackson
            - build_gson
            - build_moshi
            - build_custom
            - build_kotlinx
      - test:
          requires:
            - build_jackson
            - build_gson
            - build_moshi
            - build_custom
            - build_kotlinx
      - publish_snapshot:
          requires:
            - test
          filters:
            branches:
              only: develop
      - publish_release:
          requires:
            - test
          filters:
            branches:
              only: master
