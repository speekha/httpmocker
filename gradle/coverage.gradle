/*
 * Copyright 2019 David Blanc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'jacoco'

ext {
    coverageSourceDirs = 'src/test/java'
}

jacoco {
    toolVersion = "0.8.4"
    reportsDir = file("$buildDir/reports")
}

jacocoTestReport {
    dependsOn = subprojects.test
    group = "Reporting"
    description = "Generate Jacoco coverage reports for Debug build"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def allClasses = files()
    parent.subprojects.stream()
            .flatMap { project -> project.sourceSets.stream() }
            .filter { it.name == 'main'}
            .forEach {
                allClasses = allClasses + it.output
            }

    additionalSourceDirs.from = coverageSourceDirs
    sourceDirectories.from = coverageSourceDirs
    classDirectories.from = allClasses
    executionData.from = files("$buildDir/jacoco/test.exec")

    // Bit hacky but fixes https://code.google.com/p/android/issues/detail?id=69174.
    // We iterate through the compiled .class tree and rename $$ to $.
    doFirst {
        new File("$buildDir/classes/kotlin/test/").eachFileRecurse { file ->
            if (file.name.contains('$$')) {
                file.renameTo(file.path.replace('$$', '$'))
            }
        }
    }
}
